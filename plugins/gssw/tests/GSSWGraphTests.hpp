#ifndef GWIZ_GSSW_GSSWGRAPH_TESTS_HPP
#define GWIZ_GSSW_GSSWGRAPH_TESTS_HPP

#include <chrono>
#include <thread>
#include <memory>

#include "gssw/gssw.h"
#include "gssw/graph/GraphManager.h"

#include "gtest/gtest.h"

#include "config/TestConfig.h"
#include "tests/classes/TestReference.hpp"
#include "tests/classes/TestVariantList.hpp"
#include "tests/classes/TestReferenceVariantGenerator.hpp"
#include "tests/classes/TestAlignmentReader.hpp"
#include "plugins/gssw/graph/GSSWGraph.h"
#include "plugins/gssw/graph/AlignmentReporter.h"

#include "core/alignments/BamAlignmentReader.h"
#include "core/alignments/BamAlignmentReaderManager.h"
#include "core/alignments/BamAlignmentReaderPreloadManager.h"
#include "core/variants/VCFFileReader.h"
#include "core/variants/IVariant.h"
#include "core/reference/FastaReference.h"
#include "core/utils/ThreadPool.hpp"


namespace
{

	class GSSWGraphTest : public gwiz::gssw::GSSWGraph
	{
	public:
		typedef std::shared_ptr< GSSWGraphTest > GSSWGraphTestPtr;

		GSSWGraphTest(gwiz::IReference::SharedPtr referencePtr, gwiz::IVariantList::SharedPtr variantListPtr, gwiz::IAlignmentReader::SharedPtr alignmentReader) :
			gwiz::gssw::GSSWGraph(referencePtr, variantListPtr, alignmentReader)
		{
		}

		~GSSWGraphTest()
		{
		}

/*
		gwiz::gssw::GSSWGraph::VariantVertexDescriptor getReferenceVertexContainsPositionTest(gwiz::position pos)
		{
			return getReferenceVertexContainsPosition(pos);
		}

		gwiz::gssw::GSSWGraph::GraphPtr getGraph()
		{
			return this->m_graph_ptr;
		}
*/

		static void Build31VariantsTestData(gwiz::IReference::SharedPtr& referencePtr, gwiz::IVariantList::SharedPtr& variantListPtr, gwiz::testing::TestAlignmentReader::SharedPtr& alignmentReaderPtr)
		{
			std::string referenceSequence = "GGACCTTTCTCAGCAGCAGTGAACTTGGGGTGCTCACAACCTGTGCAAAACCAGCTGTGGTGGCTAAGGATTGCCTATGTCACCTCTCCGAGCCAAGATGGCCGAATAGGAACAGCTCCGGTCTACAGCTCCCAGCGTGAGCGACGCAGAAGACGGGTGATTTCTGCATTTCCATCTGAAGTACCGGGTTCATCTCACTAGGGAGTGCCAGACAGTGGGCGCAGGCCAGTGTGTGTGCGCACCGTGCGCGAGCCGAAGCAGGGCGAGGCATTGCCTCACCTGGGAAGCGCAAGGGGTCAGGGAGTTCCCTTTCCGAGTCAAAGAAAGGGGTGACGGACGCACCTGGAAAATCGGGTCACTCCCATCCGAATATTGCGCTTTTCAGACCGGCTTAAGAAACGGTGCACCACGAGACTATATCCCACACCTGGCTCAGAGGGTCCTACGCCCACGGAATCTCGCTGATTGCTAGCACAGCAGTCTGAGATCAAACTGCAAGGCGGCAACGAGGCTGGGGGAGGGGCGCCCGCCATTGCCCAGGCTTGCTTAGGTAAACAAAGCAGCCGGGAAGCTCGAACTGGGTGGAGCCCACCACAGCTCAAGGAGGCCTGCCTGCCTCTGTAGGCTCCACCTCTGGGGGCAGGGCACAGACAAACAAAAAGACAGCAGTAACCTCTGCAGACTTAAGTGTCCCTGTCTGACAGCTTTGAAGAGAGCAGTGGTTCTCCCAGCATGCAGCTGGAGATCTGAGAACGGGCAGACTGCCTCCTCAAGTGGGTCCCTGACCCCTGACCCCCGAGCAGCCTAACTGGGAGGCACCCCCCAGCAGGGGCACACTGACACCTCACACGACAGGGTATTCCAACAGACCTGCAGCTGAGGGTCCTGTCTGTTAGAAGGAAAACTAACAACCAGAAAGGACATCTACACCGAAAACCCATCTGTACATCACCATCATCAAAGACCAAAAGTAGATAAAACCACAAAGATGGGGAAAAAACAGAACAGAAAAACTGGAAACCCTAAAACGCAGAGCGCCTCTCCTCCTCCAAAGGAACGCAGTTCCTCACCAGCAACAGAACAA";

        	gwiz::position startPosition = 10;
			std::string referenceString = std::string(startPosition, 'x');
			referenceString += referenceSequence;
			gwiz::testing::TestReferenceVariantGenerator testReferenceVariantGenerator(referenceString, "10", startPosition);
            testReferenceVariantGenerator.addVariant(startPosition + 14, ".", 1, {"A"});
			testReferenceVariantGenerator.addVariant(startPosition + 26, ".", 1, {"G"});
			testReferenceVariantGenerator.addVariant(startPosition + 30, ".", 1, {"A"});
			testReferenceVariantGenerator.addVariant(startPosition + 94, ".", 1, {"T"});
			testReferenceVariantGenerator.addVariant(startPosition + 119, ".", 6, {"C"});
			testReferenceVariantGenerator.addVariant(startPosition + 142, ".", 1, {"CAGCCGCCTGCCTTGGCCTCCCAAAGTGCCGAGATTGCAGCCTCTGCCCGGCTGCCACCCCGTCTGGGAAGTGAGGAGTGTCTCTGCCTGGCCGCCCATCGTCTGGGATGTGAGGAGCCCCTCTGCCTGGCTGCCCAGTCTGGAAAGTGAGGAGCGTCTCCGCCCGGCCGCCATCCCATCTAGGAAGTGAGGAGCGCCTCTTCCCAGCCGCCATCACATCTAGGAAGTGAGGAGCGT"});

			alignmentReaderPtr = std::make_shared< gwiz::testing::TestAlignmentReader >();
			alignmentReaderPtr->addAlignment(5,"TTTCTCAGCAGCAGTGAACATGGGGTGCTCAGAACATGTGCAAAACCAGCTGTGGTGGCTAAGGATTGCCTATGTCACCTCTCCGAGCCAAGATGGCCGTA");
			alignmentReaderPtr->addAlignment(9,"TCAGCAGCAGTGAACATGGGGTGCTCAGAACATGTGCAAAACCAGCTGTGGTGGCTAAGGATTGCCTATGTCACCTCTCCGAGCCAAGATGGCCGTATAGG");
			alignmentReaderPtr->addAlignment(12,"GCAGCAGTGAACATGGGGTGCTCAGAACATGTGCAAAACCAGCTGTGGTGGCTAAGGATTGCCTATGTCACCTCTCCGAGCCAAGATGGCCGTATAGGAAC");
			alignmentReaderPtr->addAlignment(13,"CAGCAGTGAACATGGGGTGCTCAGAACATGTGCAAAACCAGCTGTGGTGGCTAAGGATTGCCTATGTCACCTCTCCGAGCCAAGATGGCCGTATAGGAACA");
			alignmentReaderPtr->addAlignment(18,"GTGAACATGGGGTGCTCAGAACATGTGCAAAACCAGCTGTGGTGGCTAAGGATTGCCTATGTCACCTCTCCGAGCCAAGATGGCCGTATAGGAACAGCTCC");
			alignmentReaderPtr->addAlignment(25,"TGGGGTGCTCAGAACATGTGCAAAACCAGCTGTGGTGGCTAAGGATTGCCTATGTCACCTCTCCGAGCCAAGATGGCCGTATAGGAACAGCTCCGGTCTAC");
			alignmentReaderPtr->addAlignment(28,"GGTGCTCAGAACATGTGCAAAACCAGCTGTGGTGGCTAAGGATTGCCTATGTCACCTCTCCGAGCCAAGATGGCCGTATAGGAACAGCTCCGGTCTACAGC");
			alignmentReaderPtr->addAlignment(28,"GGTGCTCAGAACATGTGCAAAACCAGCTGTGGTGGCTAAGGATTGCCTATGTCACCTCTCCGAGCCAAGATGGCCGTATAGGAACAGCTCCGGTCTACAGC");
			alignmentReaderPtr->addAlignment(32,"CTCAGAACATGTGCAAAACCAGCTGTGGTGGCTAAGGATTGCCTATGTCACCTCTCCGAGCCAAGATGGCCGTATAGGAACAGCTCCGGTCTACAGCCCCC");
			alignmentReaderPtr->addAlignment(34,"CAGAACATGTGCAAAACCAGCTGTGGTGGCTAAGGATTGCCTATGTCACCTCTCCGAGCCAAGATGGCCGTATAGGAACAGCTCCGGTCTACAGCCCCCCC");
			alignmentReaderPtr->addAlignment(36,"GAACATGTGCAAAACCAGCTGTGGTGGCTAAGGATTGCCTATGTCACCTCTCCGAGCCAAGATGGCCGTATAGGAACAGCTCCGGTCTACAGCCCCCCCCC");
			alignmentReaderPtr->addAlignment(39,"CATGTGCAAAACCAGCTGTGGTGGCTAAGGATTGCCTATGTCACCTCTCCGAGCCAAGATGGCCGTATAGGAACAGCTCCGGTCTACAGCCCCCCCCCCAG");
			alignmentReaderPtr->addAlignment(49,"ACCAGCTGTGGTGGCTAAGGATTGCCTATGTCACCTCTCCGAGCCAAGATGGCCGTATAGGAACAGCTCCGGTCTACAGCCCCCCCCCCAGCGTGAGCGAC");
			alignmentReaderPtr->addAlignment(51,"CAGCTGTGGTGGCTAAGGATTGCCTATGTCACCTCTCCGAGCCAAGATGGCCGTATAGGAACAGCTCCGGTCTACAGCCCCCCCCCCAGCGTGAGCGACGC");
			alignmentReaderPtr->addAlignment(54,"CTGTGGTGGCTAAGGATTGCCTATGTCACCTCTCCGAGCCAAGATGGCCGTATAGGAACAGCTCCGGTCTACAGCCCCCCCCCCAGCGTGAGCGACGCAGA");
			alignmentReaderPtr->addAlignment(65,"AAGGATTGCCTATGTCACCTCTCCGAGCCAAGATGGCCGTATAGGAACAGCTCCGGTCTACAGCCCCCCCCCCAGCGTGAGCGACGCAGAAGCAGCCGCCT");
			alignmentReaderPtr->addAlignment(65,"AAGGATTGCCTATGTCACCTCTCCGAGCCAAGATGGCCGTATAGGAACAGCTCCGGTCTACAGCCCCCCCCCCAGCGTGAGCGACGCAGAAGCAGCCGCCT");
			alignmentReaderPtr->addAlignment(73,"CCTATGTCACCTCTCCGAGCCAAGATGGCCGTATAGGAACAGCTCCGGTCTACAGCCCCCCCCCCAGCGTGAGCGACGCAGAAGCAGCCGCCTGCCTTGGC");
			alignmentReaderPtr->addAlignment(91,"GCCAAGATGGCCGTATAGGAACAGCTCCGGTCTACAGCCCCCCCCCCAGCGTGAGCGACGCAGAAGCAGCCGCCTGCCTTGGCCTCCCAAAGTGCCGAGAT");
			alignmentReaderPtr->addAlignment(91,"GCCAAGATGGCCGTATAGGAACAGCTCCGGTCTACAGCCCCCCCCCCAGCGTGAGCGACGCAGAAGCAGCCGCCTGCCTTGGCCTCCCAAAGTGCCGAGAT");
			alignmentReaderPtr->addAlignment(93,"CAAGATGGCCGTATAGGAACAGCTCCGGTCTACAGCCCCCCCCCCAGCGTGAGCGACGCAGAAGCAGCCGCCTGCCTTGGCCTCCCAAAGTGCCGAGATTG");
			alignmentReaderPtr->addAlignment(106,"TAGGAACAGCTCCGGTCTACAGCCCCCCCCCCAGCGTGAGCGACGCAGAAGCAGCCGCCTGCCTTGGCCTCCCAAAGTGCCGAGATTGCAGCCTCTGCCCG");
			alignmentReaderPtr->addAlignment(106,"TAGGAACAGCTCCGGTCTACAGCCCCCCCCCCAGCGTGAGCGACGCAGAAGCAGCCGCCTGCCTTGGCCTCCCAAAGTGCCGAGATTGCAGCCTCTGCCCG");
			alignmentReaderPtr->addAlignment(108,"GGAACAGCTCCGGTCTACAGCCCCCCCCCCAGCGTGAGCGACGCAGAAGCAGCCGCCTGCCTTGGCCTCCCAAAGTGCCGAGATTGCAGCCTCTGCCCGGC");
			alignmentReaderPtr->addAlignment(114,"GCTCCGGTCTACAGCCCCCCCCCCAGCGTGAGCGACGCAGAAGCAGCCGCCTGCCTTGGCCTCCCAAAGTGCCGAGATTGCAGCCTCTGCCCGGCTGCCAC");
			alignmentReaderPtr->addAlignment(123,"TACAGCCCCCCCCCCAGCGTGAGCGACGCAGAAGCAGCCGCCTGCCTTGGCCTCCCAAAGTGCCGAGATTGCAGCCTCTGCCCGGCTGCCACCCCGTCTGG");
			alignmentReaderPtr->addAlignment(127,"GCCCCCCCCCCAGCGTGAGCGACGCAGAAGCAGCCGCCTGCCTTGGCCTCCCAAAGTGCCGAGATTGCAGCCTCTGCCCGGCTGCCACCCCGTCTGGGAAG");
			alignmentReaderPtr->addAlignment(130,"CCCCCCCCAGCGTGAGCGACGCAGAAGCAGCCGCCTGCCTTGGCCTCCCAAAGTGCCGAGATTGCAGCCTCTGCCCGGCTGCCACCCCGTCTGGGAAGTGA");
			alignmentReaderPtr->addAlignment(141,"GTGAGCGACGCAGAAGCAGCCGCCTGCCTTGGCCTCCCAAAGTGCCGAGATTGCAGCCTCTGCCCGGCTGCCACCCCGTCTGGGAAGTGAGGAGTGTCTCT");
			alignmentReaderPtr->addAlignment(150,"GCAGAAGCAGCCGCCTGCCTTGGCCTCCCAAAGTGCCGAGATTGCAGCCTCTGCCCGGCTGCCACCCCGTCTGGGAAGTGAGGAGTGTCTCTGCCTGGCCG");
			alignmentReaderPtr->addAlignment(152,"AGAAGCAGCCGCCTGCCTTGGCCTCCCAAAGTGCCGAGATTGCAGCCTCTGCCCGGCTGCCACCCCGTCTGGGAAGTGAGGAGTGTCTCTGCCTGGCCGCC");
			alignmentReaderPtr->addAlignment(152,"AGAAGCAGCCGCCTGCCTTGGCCTCCCAAAGTGCCGAGATTGCAGCCTCTGCCCGGCTGCCACCCCGTCTGGGAAGTGAGGAGTGTCTCTGCCTGGCCGCC");
			alignmentReaderPtr->addAlignment(152,"AGAAGCAGCCGCCTGCCTTGGCCTCCCAAAGTGCCGAGATTGCAGCCTCTGCCCGGCTGCCACCCCGTCTGGGAAGTGAGGAGTGTCTCTGCCTGGCCGCC");
			alignmentReaderPtr->addAlignment(156,"GCAGCCGCCTGCCTTGGCCTCCCAAAGTGCCGAGATTGCAGCCTCTGCCCGGCTGCCACCCCGTCTGGGAAGTGAGGAGTGTCTCTGCCTGGCCGCCCATC");
			alignmentReaderPtr->addAlignment(174,"CTCCCAAAGTGCCGAGATTGCAGCCTCTGCCCGGCTGCCACCCCGTCTGGGAAGTGAGGAGTGTCTCTGCCTGGCCGCCCATCGTCTGGGATGTGAGGAGC");
			alignmentReaderPtr->addAlignment(177,"CCAAAGTGCCGAGATTGCAGCCTCTGCCCGGCTGCCACCCCGTCTGGGAAGTGAGGAGTGTCTCTGCCTGGCCGCCCATCGTCTGGGATGTGAGGAGCCCC");
			alignmentReaderPtr->addAlignment(178,"CAAAGTGCCGAGATTGCAGCCTCTGCCCGGCTGCCACCCCGTCTGGGAAGTGAGGAGTGTCTCTGCCTGGCCGCCCATCGTCTGGGATGTGAGGAGCCCCT");
			alignmentReaderPtr->addAlignment(185,"CCGAGATTGCAGCCTCTGCCCGGCTGCCACCCCGTCTGGGAAGTGAGGAGTGTCTCTGCCTGGCCGCCCATCGTCTGGGATGTGAGGAGCCCCTCTGCCTG");
			alignmentReaderPtr->addAlignment(188,"AGATTGCAGCCTCTGCCCGGCTGCCACCCCGTCTGGGAAGTGAGGAGTGTCTCTGCCTGGCCGCCCATCGTCTGGGATGTGAGGAGCCCCTCTGCCTGGCT");
			alignmentReaderPtr->addAlignment(189,"GATTGCAGCCTCTGCCCGGCTGCCACCCCGTCTGGGAAGTGAGGAGTGTCTCTGCCTGGCCGCCCATCGTCTGGGATGTGAGGAGCCCCTCTGCCTGGCTG");
			alignmentReaderPtr->addAlignment(192,"TGCAGCCTCTGCCCGGCTGCCACCCCGTCTGGGAAGTGAGGAGTGTCTCTGCCTGGCCGCCCATCGTCTGGGATGTGAGGAGCCCCTCTGCCTGGCTGCCC");
			alignmentReaderPtr->addAlignment(195,"AGCCTCTGCCCGGCTGCCACCCCGTCTGGGAAGTGAGGAGTGTCTCTGCCTGGCCGCCCATCGTCTGGGATGTGAGGAGCCCCTCTGCCTGGCTGCCCAGT");
			alignmentReaderPtr->addAlignment(206,"GGCTGCCACCCCGTCTGGGAAGTGAGGAGTGTCTCTGCCTGGCCGCCCATCGTCTGGGATGTGAGGAGCCCCTCTGCCTGGCTGCCCAGTCTGGAAAGTGA");
			alignmentReaderPtr->addAlignment(207,"GCTGCCACCCCGTCTGGGAAGTGAGGAGTGTCTCTGCCTGGCCGCCCATCGTCTGGGATGTGAGGAGCCCCTCTGCCTGGCTGCCCAGTCTGGAAAGTGAG");
			alignmentReaderPtr->addAlignment(209,"TGCCACCCCGTCTGGGAAGTGAGGAGTGTCTCTGCCTGGCCGCCCATCGTCTGGGATGTGAGGAGCCCCTCTGCCTGGCTGCCCAGTCTGGAAAGTGAGGA");
			alignmentReaderPtr->addAlignment(211,"CCACCCCGTCTGGGAAGTGAGGAGTGTCTCTGCCTGGCCGCCCATCGTCTGGGATGTGAGGAGCCCCTCTGCCTGGCTGCCCAGTCTGGAAAGTGAGGAGC");
			alignmentReaderPtr->addAlignment(214,"CCCCGTCTGGGAAGTGAGGAGTGTCTCTGCCTGGCCGCCCATCGTCTGGGATGTGAGGAGCCCCTCTGCCTGGCTGCCCAGTCTGGAAAGTGAGGAGCGTC");
			alignmentReaderPtr->addAlignment(216,"CCGTCTGGGAAGTGAGGAGTGTCTCTGCCTGGCCGCCCATCGTCTGGGATGTGAGGAGCCCCTCTGCCTGGCTGCCCAGTCTGGAAAGTGAGGAGCGTCTC");
			alignmentReaderPtr->addAlignment(216,"CCGTCTGGGAAGTGAGGAGTGTCTCTGCCTGGCCGCCCATCGTCTGGGATGTGAGGAGCCCCTCTGCCTGGCTGCCCAGTCTGGAAAGTGAGGAGCGTCTC");
			alignmentReaderPtr->addAlignment(224,"GAAGTGAGGAGTGTCTCTGCCTGGCCGCCCATCGTCTGGGATGTGAGGAGCCCCTCTGCCTGGCTGCCCAGTCTGGAAAGTGAGGAGCGTCTCCGCCCGGC");
			alignmentReaderPtr->addAlignment(224,"GAAGTGAGGAGTGTCTCTGCCTGGCCGCCCATCGTCTGGGATGTGAGGAGCCCCTCTGCCTGGCTGCCCAGTCTGGAAAGTGAGGAGCGTCTCCGCCCGGC");
			alignmentReaderPtr->addAlignment(226,"AGTGAGGAGTGTCTCTGCCTGGCCGCCCATCGTCTGGGATGTGAGGAGCCCCTCTGCCTGGCTGCCCAGTCTGGAAAGTGAGGAGCGTCTCCGCCCGGCCG");
			alignmentReaderPtr->addAlignment(233,"AGTGTCTCTGCCTGGCCGCCCATCGTCTGGGATGTGAGGAGCCCCTCTGCCTGGCTGCCCAGTCTGGAAAGTGAGGAGCGTCTCCGCCCGGCCGCCATCCC");
			alignmentReaderPtr->addAlignment(235,"TGTCTCTGCCTGGCCGCCCATCGTCTGGGATGTGAGGAGCCCCTCTGCCTGGCTGCCCAGTCTGGAAAGTGAGGAGCGTCTCCGCCCGGCCGCCATCCCAT");
			alignmentReaderPtr->addAlignment(240,"CTGCCTGGCCGCCCATCGTCTGGGATGTGAGGAGCCCCTCTGCCTGGCTGCCCAGTCTGGAAAGTGAGGAGCGTCTCCGCCCGGCCGCCATCCCATCTAGG");
			alignmentReaderPtr->addAlignment(243,"CCTGGCCGCCCATCGTCTGGGATGTGAGGAGCCCCTCTGCCTGGCTGCCCAGTCTGGAAAGTGAGGAGCGTCTCCGCCCGGCCGCCATCCCATCTAGGAAG");
			alignmentReaderPtr->addAlignment(268,"GAGGAGCCCCTCTGCCTGGCTGCCCAGTCTGGAAAGTGAGGAGCGTCTCCGCCCGGCCGCCATCCCATCTAGGAAGTGAGGAGCGCCTCTTCCCAGCCGCC");
			alignmentReaderPtr->addAlignment(271,"GAGCCCCTCTGCCTGGCTGCCCAGTCTGGAAAGTGAGGAGCGTCTCCGCCCGGCCGCCATCCCATCTAGGAAGTGAGGAGCGCCTCTTCCCAGCCGCCATC");
			alignmentReaderPtr->addAlignment(275,"CCCTCTGCCTGGCTGCCCAGTCTGGAAAGTGAGGAGCGTCTCCGCCCGGCCGCCATCCCATCTAGGAAGTGAGGAGCGCCTCTTCCCAGCCGCCATCACAT");
			alignmentReaderPtr->addAlignment(281,"GCCTGGCTGCCCAGTCTGGAAAGTGAGGAGCGTCTCCGCCCGGCCGCCATCCCATCTAGGAAGTGAGGAGCGCCTCTTCCCAGCCGCCATCACATCTAGGA");
			alignmentReaderPtr->addAlignment(301,"AAGTGAGGAGCGTCTCCGCCCGGCCGCCATCCCATCTAGGAAGTGAGGAGCGCCTCTTCCCAGCCGCCATCACATCTAGGAAGTGAGGAGCGTCGGGTGAT");
			alignmentReaderPtr->addAlignment(304,"TGAGGAGCGTCTCCGCCCGGCCGCCATCCCATCTAGGAAGTGAGGAGCGCCTCTTCCCAGCCGCCATCACATCTAGGAAGTGAGGAGCGTCGGGTGATTTC");
			alignmentReaderPtr->addAlignment(305,"GAGGAGCGTCTCCGCCCGGCCGCCATCCCATCTAGGAAGTGAGGAGCGCCTCTTCCCAGCCGCCATCACATCTAGGAAGTGAGGAGCGTCGGGTGATTTCT");
			alignmentReaderPtr->addAlignment(306,"AGGAGCGTCTCCGCCCGGCCGCCATCCCATCTAGGAAGTGAGGAGCGCCTCTTCCCAGCCGCCATCACATCTAGGAAGTGAGGAGCGTCGGGTGATTTCTG");
			alignmentReaderPtr->addAlignment(307,"GGAGCGTCTCCGCCCGGCCGCCATCCCATCTAGGAAGTGAGGAGCGCCTCTTCCCAGCCGCCATCACATCTAGGAAGTGAGGAGCGTCGGGTGATTTCTGC");
			alignmentReaderPtr->addAlignment(308,"GAGCGTCTCCGCCCGGCCGCCATCCCATCTAGGAAGTGAGGAGCGCCTCTTCCCAGCCGCCATCACATCTAGGAAGTGAGGAGCGTCGGGTGATTTCTGCA");
			alignmentReaderPtr->addAlignment(309,"AGCGTCTCCGCCCGGCCGCCATCCCATCTAGGAAGTGAGGAGCGCCTCTTCCCAGCCGCCATCACATCTAGGAAGTGAGGAGCGTCGGGTGATTTCTGCAT");
			alignmentReaderPtr->addAlignment(310,"GCGTCTCCGCCCGGCCGCCATCCCATCTAGGAAGTGAGGAGCGCCTCTTCCCAGCCGCCATCACATCTAGGAAGTGAGGAGCGTCGGGTGATTTCTGCATT");
			alignmentReaderPtr->addAlignment(312,"GTCTCCGCCCGGCCGCCATCCCATCTAGGAAGTGAGGAGCGCCTCTTCCCAGCCGCCATCACATCTAGGAAGTGAGGAGCGTCGGGTGATTTCTGCATTTC");
			alignmentReaderPtr->addAlignment(312,"GTCTCCGCCCGGCCGCCATCCCATCTAGGAAGTGAGGAGCGCCTCTTCCCAGCCGCCATCACATCTAGGAAGTGAGGAGCGTCGGGTGATTTCTGCATTTC");
			alignmentReaderPtr->addAlignment(314,"CTCCGCCCGGCCGCCATCCCATCTAGGAAGTGAGGAGCGCCTCTTCCCAGCCGCCATCACATCTAGGAAGTGAGGAGCGTCGGGTGATTTCTGCATTTCCA");
			alignmentReaderPtr->addAlignment(316,"CCGCCCGGCCGCCATCCCATCTAGGAAGTGAGGAGCGCCTCTTCCCAGCCGCCATCACATCTAGGAAGTGAGGAGCGTCGGGTGATTTCTGCATTTCCATC");
			alignmentReaderPtr->addAlignment(317,"CGCCCGGCCGCCATCCCATCTAGGAAGTGAGGAGCGCCTCTTCCCAGCCGCCATCACATCTAGGAAGTGAGGAGCGTCGGGTGATTTCTGCATTTCCATCT");
			alignmentReaderPtr->addAlignment(318,"GCCCGGCCGCCATCCCATCTAGGAAGTGAGGAGCGCCTCTTCCCAGCCGCCATCACATCTAGGAAGTGAGGAGCGTCGGGTGATTTCTGCATTTCCATCTG");
			alignmentReaderPtr->addAlignment(333,"CATCTAGGAAGTGAGGAGCGCCTCTTCCCAGCCGCCATCACATCTAGGAAGTGAGGAGCGTCGGGTGATTTCTGCATTTCCATCTGAAGTACCGGGTTCAT");
			alignmentReaderPtr->addAlignment(341,"AAGTGAGGAGCGCCTCTTCCCAGCCGCCATCACATCTAGGAAGTGAGGAGCGTCGGGTGATTTCTGCATTTCCATCTGAAGTACCGGGTTCATCTCACTAG");
			alignmentReaderPtr->addAlignment(344,"TGAGGAGCGCCTCTTCCCAGCCGCCATCACATCTAGGAAGTGAGGAGCGTCGGGTGATTTCTGCATTTCCATCTGAAGTACCGGGTTCATCTCACTAGGGA");
			alignmentReaderPtr->addAlignment(349,"AGCGCCTCTTCCCAGCCGCCATCACATCTAGGAAGTGAGGAGCGTCGGGTGATTTCTGCATTTCCATCTGAAGTACCGGGTTCATCTCACTAGGGAGTGCC");
			alignmentReaderPtr->addAlignment(370,"TCACATCTAGGAAGTGAGGAGCGTCGGGTGATTTCTGCATTTCCATCTGAAGTACCGGGTTCATCTCACTAGGGAGTGCCAGACAGTGGGCGCAGGCCAGT");
			alignmentReaderPtr->addAlignment(378,"AGGAAGTGAGGAGCGTCGGGTGATTTCTGCATTTCCATCTGAAGTACCGGGTTCATCTCACTAGGGAGTGCCAGACAGTGGGCGCAGGCCAGTGTGTGTGC");
			alignmentReaderPtr->addAlignment(384,"TGAGGAGCGTCGGGTGATTTCTGCATTTCCATCTGAAGTACCGGGTTCATCTCACTAGGGAGTGCCAGACAGTGGGCGCAGGCCAGTGTGTGTGCGCACCG");
			alignmentReaderPtr->addAlignment(386,"AGGAGCGTCGGGTGATTTCTGCATTTCCATCTGAAGTACCGGGTTCATCTCACTAGGGAGTGCCAGACAGTGGGCGCAGGCCAGTGTGTGTGCGCACCGTG");
			alignmentReaderPtr->addAlignment(387,"GGAGCGTCGGGTGATTTCTGCATTTCCATCTGAAGTACCGGGTTCATCTCACTAGGGAGTGCCAGACAGTGGGCGCAGGCCAGTGTGTGTGCGCACCGTGC");
			alignmentReaderPtr->addAlignment(388,"GAGCGTCGGGTGATTTCTGCATTTCCATCTGAAGTACCGGGTTCATCTCACTAGGGAGTGCCAGACAGTGGGCGCAGGCCAGTGTGTGTGCGCACCGTGCG");
			alignmentReaderPtr->addAlignment(392,"GTCGGGTGATTTCTGCATTTCCATCTGAAGTACCGGGTTCATCTCACTAGGGAGTGCCAGACAGTGGGCGCAGGCCAGTGTGTGTGCGCACCGTGCGCGAG");
			alignmentReaderPtr->addAlignment(396,"GGTGATTTCTGCATTTCCATCTGAAGTACCGGGTTCATCTCACTAGGGAGTGCCAGACAGTGGGCGCAGGCCAGTGTGTGTGCGCACCGTGCGCGAGCCGA");
			alignmentReaderPtr->addAlignment(399,"GATTTCTGCATTTCCATCTGAAGTACCGGGTTCATCTCACTAGGGAGTGCCAGACAGTGGGCGCAGGCCAGTGTGTGTGCGCACCGTGCGCGAGCCGAAGC");
			alignmentReaderPtr->addAlignment(410,"TTCCATCTGAAGTACCGGGTTCATCTCACTAGGGAGTGCCAGACAGTGGGCGCAGGCCAGTGTGTGTGCGCACCGTGCGCGAGCCGAAGCAGGGCGAGGCA");
			alignmentReaderPtr->addAlignment(410,"TTCCATCTGAAGTACCGGGTTCATCTCACTAGGGAGTGCCAGACAGTGGGCGCAGGCCAGTGTGTGTGCGCACCGTGCGCGAGCCGAAGCAGGGCGAGGCA");
			alignmentReaderPtr->addAlignment(415,"TCTGAAGTACCGGGTTCATCTCACTAGGGAGTGCCAGACAGTGGGCGCAGGCCAGTGTGTGTGCGCACCGTGCGCGAGCCGAAGCAGGGCGAGGCATTGCC");
			alignmentReaderPtr->addAlignment(424,"CCGGGTTCATCTCACTAGGGAGTGCCAGACAGTGGGCGCAGGCCAGTGTGTGTGCGCACCGTGCGCGAGCCGAAGCAGGGCGAGGCATTGCCTCACCTGGG");
			alignmentReaderPtr->addAlignment(435,"TCACTAGGGAGTGCCAGACAGTGGGCGCAGGCCAGTGTGTGTGCGCACCGTGCGCGAGCCGAAGCAGGGCGAGGCATTGCCTCACCTGGGAAGCGCAAGGG");
			alignmentReaderPtr->addAlignment(440,"AGGGAGTGCCAGACAGTGGGCGCAGGCCAGTGTGTGTGCGCACCGTGCGCGAGCCGAAGCAGGGCGAGGCATTGCCTCACCTGGGAAGCGCAAGGGGTCAG");
			alignmentReaderPtr->addAlignment(454,"AGTGGGCGCAGGCCAGTGTGTGTGCGCACCGTGCGCGAGCCGAAGCAGGGCGAGGCATTGCCTCACCTGGGAAGCGCAAGGGGTCAGGGAGTTCCCTTTCC");
			alignmentReaderPtr->addAlignment(460,"CGCAGGCCAGTGTGTGTGCGCACCGTGCGCGAGCCGAAGCAGGGCGAGGCATTGCCTCACCTGGGAAGCGCAAGGGGTCAGGGAGTTCCCTTTCCGAGTCA");
			alignmentReaderPtr->addAlignment(460,"CGCAGGCCAGTGTGTGTGCGCACCGTGCGCGAGCCGAAGCAGGGCGAGGCATTGCCTCACCTGGGAAGCGCAAGGGGTCAGGGAGTTCCCTTTCCGAGTCA");
			alignmentReaderPtr->addAlignment(472,"TGTGTGCGCACCGTGCGCGAGCCGAAGCAGGGCGAGGCATTGCCTCACCTGGGAAGCGCAAGGGGTCAGGGAGTTCCCTTTCCGAGTCAAAGAAAGGGGTG");
			alignmentReaderPtr->addAlignment(477,"GCGCACCGTGCGCGAGCCGAAGCAGGGCGAGGCATTGCCTCACCTGGGAAGCGCAAGGGGTCAGGGAGTTCCCTTTCCGAGTCAAAGAAAGGGGTGACGGA");
			alignmentReaderPtr->addAlignment(482,"CCGTGCGCGAGCCGAAGCAGGGCGAGGCATTGCCTCACCTGGGAAGCGCAAGGGGTCAGGGAGTTCCCTTTCCGAGTCAAAGAAAGGGGTGACGGACGCAC");
			alignmentReaderPtr->addAlignment(485,"TGCGCGAGCCGAAGCAGGGCGAGGCATTGCCTCACCTGGGAAGCGCAAGGGGTCAGGGAGTTCCCTTTCCGAGTCAAAGAAAGGGGTGACGGACGCACCTG");
			alignmentReaderPtr->addAlignment(491,"AGCCGAAGCAGGGCGAGGCATTGCCTCACCTGGGAAGCGCAAGGGGTCAGGGAGTTCCCTTTCCGAGTCAAAGAAAGGGGTGACGGACGCACCTGGAAAAT");
			alignmentReaderPtr->addAlignment(493,"CCGAAGCAGGGCGAGGCATTGCCTCACCTGGGAAGCGCAAGGGGTCAGGGAGTTCCCTTTCCGAGTCAAAGAAAGGGGTGACGGACGCACCTGGAAAATCG");
			alignmentReaderPtr->addAlignment(495,"GAAGCAGGGCGAGGCATTGCCTCACCTGGGAAGCGCAAGGGGTCAGGGAGTTCCCTTTCCGAGTCAAAGAAAGGGGTGACGGACGCACCTGGAAAATCGGG");
			alignmentReaderPtr->addAlignment(496,"AAGCAGGGCGAGGCATTGCCTCACCTGGGAAGCGCAAGGGGTCAGGGAGTTCCCTTTCCGAGTCAAAGAAAGGGGTGACGGACGCACCTGGAAAATCGGGT");
			alignmentReaderPtr->addAlignment(504,"CGAGGCATTGCCTCACCTGGGAAGCGCAAGGGGTCAGGGAGTTCCCTTTCCGAGTCAAAGAAAGGGGTGACGGACGCACCTGGAAAATCGGGTCACTCCCA");
			alignmentReaderPtr->addAlignment(506,"AGGCATTGCCTCACCTGGGAAGCGCAAGGGGTCAGGGAGTTCCCTTTCCGAGTCAAAGAAAGGGGTGACGGACGCACCTGGAAAATCGGGTCACTCCCATC");
			alignmentReaderPtr->addAlignment(508,"GCATTGCCTCACCTGGGAAGCGCAAGGGGTCAGGGAGTTCCCTTTCCGAGTCAAAGAAAGGGGTGACGGACGCACCTGGAAAATCGGGTCACTCCCATCCG");
			alignmentReaderPtr->addAlignment(511,"TTGCCTCACCTGGGAAGCGCAAGGGGTCAGGGAGTTCCCTTTCCGAGTCAAAGAAAGGGGTGACGGACGCACCTGGAAAATCGGGTCACTCCCATCCGAAT");
			alignmentReaderPtr->addAlignment(512,"TGCCTCACCTGGGAAGCGCAAGGGGTCAGGGAGTTCCCTTTCCGAGTCAAAGAAAGGGGTGACGGACGCACCTGGAAAATCGGGTCACTCCCATCCGAATA");
			alignmentReaderPtr->addAlignment(524,"GAAGCGCAAGGGGTCAGGGAGTTCCCTTTCCGAGTCAAAGAAAGGGGTGACGGACGCACCTGGAAAATCGGGTCACTCCCATCCGAATATTGCGCTTTTCA");
			alignmentReaderPtr->addAlignment(525,"AAGCGCAAGGGGTCAGGGAGTTCCCTTTCCGAGTCAAAGAAAGGGGTGACGGACGCACCTGGAAAATCGGGTCACTCCCATCCGAATATTGCGCTTTTCAG");
			alignmentReaderPtr->addAlignment(525,"AAGCGCAAGGGGTCAGGGAGTTCCCTTTCCGAGTCAAAGAAAGGGGTGACGGACGCACCTGGAAAATCGGGTCACTCCCATCCGAATATTGCGCTTTTCAG");
			alignmentReaderPtr->addAlignment(526,"AGCGCAAGGGGTCAGGGAGTTCCCTTTCCGAGTCAAAGAAAGGGGTGACGGACGCACCTGGAAAATCGGGTCACTCCCATCCGAATATTGCGCTTTTCAGA");
			alignmentReaderPtr->addAlignment(531,"AAGGGGTCAGGGAGTTCCCTTTCCGAGTCAAAGAAAGGGGTGACGGACGCACCTGGAAAATCGGGTCACTCCCATCCGAATATTGCGCTTTTCAGACCGGC");
			alignmentReaderPtr->addAlignment(540,"GGGAGTTCCCTTTCCGAGTCAAAGAAAGGGGTGACGGACGCACCTGGAAAATCGGGTCACTCCCATCCGAATATTGCGCTTTTCAGACCGGCTTAAGAAAC");
			alignmentReaderPtr->addAlignment(544,"GTTCCCTTTCCGAGTCAAAGAAAGGGGTGACGGACGCACCTGGAAAATCGGGTCACTCCCATCCGAATATTGCGCTTTTCAGACCGGCTTAAGAAACGGTG");
			alignmentReaderPtr->addAlignment(545,"TTCCCTTTCCGAGTCAAAGAAAGGGGTGACGGACGCACCTGGAAAATCGGGTCACTCCCATCCGAATATTGCGCTTTTCAGACCGGCTTAAGAAACGGTGC");
			alignmentReaderPtr->addAlignment(551,"TTCCGAGTCAAAGAAAGGGGTGACGGACGCACCTGGAAAATCGGGTCACTCCCATCCGAATATTGCGCTTTTCAGACCGGCTTAAGAAACGGTGCACCACG");
			alignmentReaderPtr->addAlignment(553,"CCGAGTCAAAGAAAGGGGTGACGGACGCACCTGGAAAATCGGGTCACTCCCATCCGAATATTGCGCTTTTCAGACCGGCTTAAGAAACGGTGCACCACGAG");
			alignmentReaderPtr->addAlignment(556,"AGTCAAAGAAAGGGGTGACGGACGCACCTGGAAAATCGGGTCACTCCCATCCGAATATTGCGCTTTTCAGACCGGCTTAAGAAACGGTGCACCACGAGACT");
			alignmentReaderPtr->addAlignment(559,"CAAAGAAAGGGGTGACGGACGCACCTGGAAAATCGGGTCACTCCCATCCGAATATTGCGCTTTTCAGACCGGCTTAAGAAACGGTGCACCACGAGACTATA");
			alignmentReaderPtr->addAlignment(561,"AAGAAAGGGGTGACGGACGCACCTGGAAAATCGGGTCACTCCCATCCGAATATTGCGCTTTTCAGACCGGCTTAAGAAACGGTGCACCACGAGACTATATC");
			alignmentReaderPtr->addAlignment(562,"AGAAAGGGGTGACGGACGCACCTGGAAAATCGGGTCACTCCCATCCGAATATTGCGCTTTTCAGACCGGCTTAAGAAACGGTGCACCACGAGACTATATCC");
			alignmentReaderPtr->addAlignment(566,"AGGGGTGACGGACGCACCTGGAAAATCGGGTCACTCCCATCCGAATATTGCGCTTTTCAGACCGGCTTAAGAAACGGTGCACCACGAGACTATATCCCACA");
			alignmentReaderPtr->addAlignment(567,"GGGGTGACGGACGCACCTGGAAAATCGGGTCACTCCCATCCGAATATTGCGCTTTTCAGACCGGCTTAAGAAACGGTGCACCACGAGACTATATCCCACAC");
			alignmentReaderPtr->addAlignment(579,"GCACCTGGAAAATCGGGTCACTCCCATCCGAATATTGCGCTTTTCAGACCGGCTTAAGAAACGGTGCACCACGAGACTATATCCCACACCTGGCTCAGAGG");
			alignmentReaderPtr->addAlignment(583,"CTGGAAAATCGGGTCACTCCCATCCGAATATTGCGCTTTTCAGACCGGCTTAAGAAACGGTGCACCACGAGACTATATCCCACACCTGGCTCAGAGGGTCC");
			alignmentReaderPtr->addAlignment(587,"AAAATCGGGTCACTCCCATCCGAATATTGCGCTTTTCAGACCGGCTTAAGAAACGGTGCACCACGAGACTATATCCCACACCTGGCTCAGAGGGTCCTACG");
			alignmentReaderPtr->addAlignment(588,"AAATCGGGTCACTCCCATCCGAATATTGCGCTTTTCAGACCGGCTTAAGAAACGGTGCACCACGAGACTATATCCCACACCTGGCTCAGAGGGTCCTACGC");
			alignmentReaderPtr->addAlignment(591,"TCGGGTCACTCCCATCCGAATATTGCGCTTTTCAGACCGGCTTAAGAAACGGTGCACCACGAGACTATATCCCACACCTGGCTCAGAGGGTCCTACGCCCA");
			alignmentReaderPtr->addAlignment(594,"GGTCACTCCCATCCGAATATTGCGCTTTTCAGACCGGCTTAAGAAACGGTGCACCACGAGACTATATCCCACACCTGGCTCAGAGGGTCCTACGCCCACGG");
			alignmentReaderPtr->addAlignment(606,"CCGAATATTGCGCTTTTCAGACCGGCTTAAGAAACGGTGCACCACGAGACTATATCCCACACCTGGCTCAGAGGGTCCTACGCCCACGGAATCTCGCTGAT");
			alignmentReaderPtr->addAlignment(606,"CCGAATATTGCGCTTTTCAGACCGGCTTAAGAAACGGTGCACCACGAGACTATATCCCACACCTGGCTCAGAGGGTCCTACGCCCACGGAATCTCGCTGAT");
			alignmentReaderPtr->addAlignment(614,"TGCGCTTTTCAGACCGGCTTAAGAAACGGTGCACCACGAGACTATATCCCACACCTGGCTCAGAGGGTCCTACGCCCACGGAATCTCGCTGATTGCTAGCA");
			alignmentReaderPtr->addAlignment(619,"TTTTCAGACCGGCTTAAGAAACGGTGCACCACGAGACTATATCCCACACCTGGCTCAGAGGGTCCTACGCCCACGGAATCTCGCTGATTGCTAGCACAGCA");
			alignmentReaderPtr->addAlignment(620,"TTTCAGACCGGCTTAAGAAACGGTGCACCACGAGACTATATCCCACACCTGGCTCAGAGGGTCCTACGCCCACGGAATCTCGCTGATTGCTAGCACAGCAG");
			alignmentReaderPtr->addAlignment(621,"TTCAGACCGGCTTAAGAAACGGTGCACCACGAGACTATATCCCACACCTGGCTCAGAGGGTCCTACGCCCACGGAATCTCGCTGATTGCTAGCACAGCAGT");
			alignmentReaderPtr->addAlignment(628,"CGGCTTAAGAAACGGTGCACCACGAGACTATATCCCACACCTGGCTCAGAGGGTCCTACGCCCACGGAATCTCGCTGATTGCTAGCACAGCAGTCTGAGAT");
			alignmentReaderPtr->addAlignment(630,"GCTTAAGAAACGGTGCACCACGAGACTATATCCCACACCTGGCTCAGAGGGTCCTACGCCCACGGAATCTCGCTGATTGCTAGCACAGCAGTCTGAGATCA");
			alignmentReaderPtr->addAlignment(641,"GGTGCACCACGAGACTATATCCCACACCTGGCTCAGAGGGTCCTACGCCCACGGAATCTCGCTGATTGCTAGCACAGCAGTCTGAGATCAAACTGCAAGGC");
			alignmentReaderPtr->addAlignment(653,"GACTATATCCCACACCTGGCTCAGAGGGTCCTACGCCCACGGAATCTCGCTGATTGCTAGCACAGCAGTCTGAGATCAAACTGCAAGGCGGCAACGAGGCT");
			alignmentReaderPtr->addAlignment(658,"TATCCCACACCTGGCTCAGAGGGTCCTACGCCCACGGAATCTCGCTGATTGCTAGCACAGCAGTCTGAGATCAAACTGCAAGGCGGCAACGAGGCTGGGGG");
			alignmentReaderPtr->addAlignment(662,"CCACACCTGGCTCAGAGGGTCCTACGCCCACGGAATCTCGCTGATTGCTAGCACAGCAGTCTGAGATCAAACTGCAAGGCGGCAACGAGGCTGGGGGAGGG");
			alignmentReaderPtr->addAlignment(664,"ACACCTGGCTCAGAGGGTCCTACGCCCACGGAATCTCGCTGATTGCTAGCACAGCAGTCTGAGATCAAACTGCAAGGCGGCAACGAGGCTGGGGGAGGGGC");
			alignmentReaderPtr->addAlignment(665,"CACCTGGCTCAGAGGGTCCTACGCCCACGGAATCTCGCTGATTGCTAGCACAGCAGTCTGAGATCAAACTGCAAGGCGGCAACGAGGCTGGGGGAGGGGCG");
			alignmentReaderPtr->addAlignment(665,"CACCTGGCTCAGAGGGTCCTACGCCCACGGAATCTCGCTGATTGCTAGCACAGCAGTCTGAGATCAAACTGCAAGGCGGCAACGAGGCTGGGGGAGGGGCG");
			alignmentReaderPtr->addAlignment(666,"ACCTGGCTCAGAGGGTCCTACGCCCACGGAATCTCGCTGATTGCTAGCACAGCAGTCTGAGATCAAACTGCAAGGCGGCAACGAGGCTGGGGGAGGGGCGC");
			alignmentReaderPtr->addAlignment(671,"GCTCAGAGGGTCCTACGCCCACGGAATCTCGCTGATTGCTAGCACAGCAGTCTGAGATCAAACTGCAAGGCGGCAACGAGGCTGGGGGAGGGGCGCCCGCC");
			alignmentReaderPtr->addAlignment(673,"TCAGAGGGTCCTACGCCCACGGAATCTCGCTGATTGCTAGCACAGCAGTCTGAGATCAAACTGCAAGGCGGCAACGAGGCTGGGGGAGGGGCGCCCGCCAT");
			alignmentReaderPtr->addAlignment(679,"GGTCCTACGCCCACGGAATCTCGCTGATTGCTAGCACAGCAGTCTGAGATCAAACTGCAAGGCGGCAACGAGGCTGGGGGAGGGGCGCCCGCCATTGCCCA");
			alignmentReaderPtr->addAlignment(687,"GCCCACGGAATCTCGCTGATTGCTAGCACAGCAGTCTGAGATCAAACTGCAAGGCGGCAACGAGGCTGGGGGAGGGGCGCCCGCCATTGCCCAGGCTTGCT");
			alignmentReaderPtr->addAlignment(695,"AATCTCGCTGATTGCTAGCACAGCAGTCTGAGATCAAACTGCAAGGCGGCAACGAGGCTGGGGGAGGGGCGCCCGCCATTGCCCAGGCTTGCTTAGGTAAA");
			alignmentReaderPtr->addAlignment(701,"GCTGATTGCTAGCACAGCAGTCTGAGATCAAACTGCAAGGCGGCAACGAGGCTGGGGGAGGGGCGCCCGCCATTGCCCAGGCTTGCTTAGGTAAACAAAGC");
			alignmentReaderPtr->addAlignment(704,"GATTGCTAGCACAGCAGTCTGAGATCAAACTGCAAGGCGGCAACGAGGCTGGGGGAGGGGCGCCCGCCATTGCCCAGGCTTGCTTAGGTAAACAAAGCAGC");
			alignmentReaderPtr->addAlignment(707,"TGCTAGCACAGCAGTCTGAGATCAAACTGCAAGGCGGCAACGAGGCTGGGGGAGGGGCGCCCGCCATTGCCCAGGCTTGCTTAGGTAAACAAAGCAGCCGG");
			alignmentReaderPtr->addAlignment(708,"GCTAGCACAGCAGTCTGAGATCAAACTGCAAGGCGGCAACGAGGCTGGGGGAGGGGCGCCCGCCATTGCCCAGGCTTGCTTAGGTAAACAAAGCAGCCGGG");
			alignmentReaderPtr->addAlignment(712,"GCACAGCAGTCTGAGATCAAACTGCAAGGCGGCAACGAGGCTGGGGGAGGGGCGCCCGCCATTGCCCAGGCTTGCTTAGGTAAACAAAGCAGCCGGGAAGC");
			alignmentReaderPtr->addAlignment(716,"AGCAGTCTGAGATCAAACTGCAAGGCGGCAACGAGGCTGGGGGAGGGGCGCCCGCCATTGCCCAGGCTTGCTTAGGTAAACAAAGCAGCCGGGAAGCTCGA");
			alignmentReaderPtr->addAlignment(723,"TGAGATCAAACTGCAAGGCGGCAACGAGGCTGGGGGAGGGGCGCCCGCCATTGCCCAGGCTTGCTTAGGTAAACAAAGCAGCCGGGAAGCTCGAACTGGGT");
			alignmentReaderPtr->addAlignment(729,"CAAACTGCAAGGCGGCAACGAGGCTGGGGGAGGGGCGCCCGCCATTGCCCAGGCTTGCTTAGGTAAACAAAGCAGCCGGGAAGCTCGAACTGGGTGGAGCC");
			alignmentReaderPtr->addAlignment(729,"CAAACTGCAAGGCGGCAACGAGGCTGGGGGAGGGGCGCCCGCCATTGCCCAGGCTTGCTTAGGTAAACAAAGCAGCCGGGAAGCTCGAACTGGGTGGAGCC");
			alignmentReaderPtr->addAlignment(730,"AAACTGCAAGGCGGCAACGAGGCTGGGGGAGGGGCGCCCGCCATTGCCCAGGCTTGCTTAGGTAAACAAAGCAGCCGGGAAGCTCGAACTGGGTGGAGCCC");
			alignmentReaderPtr->addAlignment(730,"AAACTGCAAGGCGGCAACGAGGCTGGGGGAGGGGCGCCCGCCATTGCCCAGGCTTGCTTAGGTAAACAAAGCAGCCGGGAAGCTCGAACTGGGTGGAGCCC");
			alignmentReaderPtr->addAlignment(740,"GCGGCAACGAGGCTGGGGGAGGGGCGCCCGCCATTGCCCAGGCTTGCTTAGGTAAACAAAGCAGCCGGGAAGCTCGAACTGGGTGGAGCCCACCACAGCTC");
			alignmentReaderPtr->addAlignment(752,"CTGGGGGAGGGGCGCCCGCCATTGCCCAGGCTTGCTTAGGTAAACAAAGCAGCCGGGAAGCTCGAACTGGGTGGAGCCCACCACAGCTCAAGGAGGCCTGC");
			alignmentReaderPtr->addAlignment(757,"GGAGGGGCGCCCGCCATTGCCCAGGCTTGCTTAGGTAAACAAAGCAGCCGGGAAGCTCGAACTGGGTGGAGCCCACCACAGCTCAAGGAGGCCTGCCTGCC");
			alignmentReaderPtr->addAlignment(758,"GAGGGGCGCCCGCCATTGCCCAGGCTTGCTTAGGTAAACAAAGCAGCCGGGAAGCTCGAACTGGGTGGAGCCCACCACAGCTCAAGGAGGCCTGCCTGCCT");
			alignmentReaderPtr->addAlignment(771,"CATTGCCCAGGCTTGCTTAGGTAAACAAAGCAGCCGGGAAGCTCGAACTGGGTGGAGCCCACCACAGCTCAAGGAGGCCTGCCTGCCTCTGTAGGCTCCAC");
			alignmentReaderPtr->addAlignment(779,"AGGCTTGCTTAGGTAAACAAAGCAGCCGGGAAGCTCGAACTGGGTGGAGCCCACCACAGCTCAAGGAGGCCTGCCTGCCTCTGTAGGCTCCACCTCTGGGG");
			alignmentReaderPtr->addAlignment(779,"AGGCTTGCTTAGGTAAACAAAGCAGCCGGGAAGCTCGAACTGGGTGGAGCCCACCACAGCTCAAGGAGGCCTGCCTGCCTCTGTAGGCTCCACCTCTGGGG");
			alignmentReaderPtr->addAlignment(787,"TTAGGTAAACAAAGCAGCCGGGAAGCTCGAACTGGGTGGAGCCCACCACAGCTCAAGGAGGCCTGCCTGCCTCTGTAGGCTCCACCTCTGGGGGCAGGGCA");
			alignmentReaderPtr->addAlignment(792,"TAAACAAAGCAGCCGGGAAGCTCGAACTGGGTGGAGCCCACCACAGCTCAAGGAGGCCTGCCTGCCTCTGTAGGCTCCACCTCTGGGGGCAGGGCACAGAC");
			alignmentReaderPtr->addAlignment(798,"AAGCAGCCGGGAAGCTCGAACTGGGTGGAGCCCACCACAGCTCAAGGAGGCCTGCCTGCCTCTGTAGGCTCCACCTCTGGGGGCAGGGCACAGACAAACAA");
			alignmentReaderPtr->addAlignment(801,"CAGCCGGGAAGCTCGAACTGGGTGGAGCCCACCACAGCTCAAGGAGGCCTGCCTGCCTCTGTAGGCTCCACCTCTGGGGGCAGGGCACAGACAAACAAAAA");
			alignmentReaderPtr->addAlignment(802,"AGCCGGGAAGCTCGAACTGGGTGGAGCCCACCACAGCTCAAGGAGGCCTGCCTGCCTCTGTAGGCTCCACCTCTGGGGGCAGGGCACAGACAAACAAAAAG");
			alignmentReaderPtr->addAlignment(806,"GGGAAGCTCGAACTGGGTGGAGCCCACCACAGCTCAAGGAGGCCTGCCTGCCTCTGTAGGCTCCACCTCTGGGGGCAGGGCACAGACAAACAAAAAGACAG");
			alignmentReaderPtr->addAlignment(807,"GGAAGCTCGAACTGGGTGGAGCCCACCACAGCTCAAGGAGGCCTGCCTGCCTCTGTAGGCTCCACCTCTGGGGGCAGGGCACAGACAAACAAAAAGACAGC");
			alignmentReaderPtr->addAlignment(810,"AGCTCGAACTGGGTGGAGCCCACCACAGCTCAAGGAGGCCTGCCTGCCTCTGTAGGCTCCACCTCTGGGGGCAGGGCACAGACAAACAAAAAGACAGCAGT");
			alignmentReaderPtr->addAlignment(811,"GCTCGAACTGGGTGGAGCCCACCACAGCTCAAGGAGGCCTGCCTGCCTCTGTAGGCTCCACCTCTGGGGGCAGGGCACAGACAAACAAAAAGACAGCAGTA");
			alignmentReaderPtr->addAlignment(818,"CTGGGTGGAGCCCACCACAGCTCAAGGAGGCCTGCCTGCCTCTGTAGGCTCCACCTCTGGGGGCAGGGCACAGACAAACAAAAAGACAGCAGTAACCTCTG");
			alignmentReaderPtr->addAlignment(826,"AGCCCACCACAGCTCAAGGAGGCCTGCCTGCCTCTGTAGGCTCCACCTCTGGGGGCAGGGCACAGACAAACAAAAAGACAGCAGTAACCTCTGCAGACTTA");
			alignmentReaderPtr->addAlignment(828,"CCCACCACAGCTCAAGGAGGCCTGCCTGCCTCTGTAGGCTCCACCTCTGGGGGCAGGGCACAGACAAACAAAAAGACAGCAGTAACCTCTGCAGACTTAAG");
			alignmentReaderPtr->addAlignment(831,"ACCACAGCTCAAGGAGGCCTGCCTGCCTCTGTAGGCTCCACCTCTGGGGGCAGGGCACAGACAAACAAAAAGACAGCAGTAACCTCTGCAGACTTAAGTGT");
			alignmentReaderPtr->addAlignment(836,"AGCTCAAGGAGGCCTGCCTGCCTCTGTAGGCTCCACCTCTGGGGGCAGGGCACAGACAAACAAAAAGACAGCAGTAACCTCTGCAGACTTAAGTGTCCCTG");
			alignmentReaderPtr->addAlignment(855,"GCCTCTGTAGGCTCCACCTCTGGGGGCAGGGCACAGACAAACAAAAAGACAGCAGTAACCTCTGCAGACTTAAGTGTCCCTGTCTGACAGCTTTGAAGAGA");
			alignmentReaderPtr->addAlignment(857,"CTCTGTAGGCTCCACCTCTGGGGGCAGGGCACAGACAAACAAAAAGACAGCAGTAACCTCTGCAGACTTAAGTGTCCCTGTCTGACAGCTTTGAAGAGAGC");
			alignmentReaderPtr->addAlignment(859,"CTGTAGGCTCCACCTCTGGGGGCAGGGCACAGACAAACAAAAAGACAGCAGTAACCTCTGCAGACTTAAGTGTCCCTGTCTGACAGCTTTGAAGAGAGCAG");
			alignmentReaderPtr->addAlignment(866,"CTCCACCTCTGGGGGCAGGGCACAGACAAACAAAAAGACAGCAGTAACCTCTGCAGACTTAAGTGTCCCTGTCTGACAGCTTTGAAGAGAGCAGTGGTTCT");
			alignmentReaderPtr->addAlignment(868,"CCACCTCTGGGGGCAGGGCACAGACAAACAAAAAGACAGCAGTAACCTCTGCAGACTTAAGTGTCCCTGTCTGACAGCTTTGAAGAGAGCAGTGGTTCTCC");
			alignmentReaderPtr->addAlignment(868,"CCACCTCTGGGGGCAGGGCACAGACAAACAAAAAGACAGCAGTAACCTCTGCAGACTTAAGTGTCCCTGTCTGACAGCTTTGAAGAGAGCAGTGGTTCTCC");
			alignmentReaderPtr->addAlignment(873,"TCTGGGGGCAGGGCACAGACAAACAAAAAGACAGCAGTAACCTCTGCAGACTTAAGTGTCCCTGTCTGACAGCTTTGAAGAGAGCAGTGGTTCTCCCAGCA");
			alignmentReaderPtr->addAlignment(875,"TGGGGGCAGGGCACAGACAAACAAAAAGACAGCAGTAACCTCTGCAGACTTAAGTGTCCCTGTCTGACAGCTTTGAAGAGAGCAGTGGTTCTCCCAGCATG");
			alignmentReaderPtr->addAlignment(882,"AGGGCACAGACAAACAAAAAGACAGCAGTAACCTCTGCAGACTTAAGTGTCCCTGTCTGACAGCTTTGAAGAGAGCAGTGGTTCTCCCAGCATGCAGCTGG");
			alignmentReaderPtr->addAlignment(886,"CACAGACAAACAAAAAGACAGCAGTAACCTCTGCAGACTTAAGTGTCCCTGTCTGACAGCTTTGAAGAGAGCAGTGGTTCTCCCAGCATGCAGCTGGAGAT");
			alignmentReaderPtr->addAlignment(886,"CACAGACAAACAAAAAGACAGCAGTAACCTCTGCAGACTTAAGTGTCCCTGTCTGACAGCTTTGAAGAGAGCAGTGGTTCTCCCAGCATGCAGCTGGAGAT");
			alignmentReaderPtr->addAlignment(892,"CAAACAAAAAGACAGCAGTAACCTCTGCAGACTTAAGTGTCCCTGTCTGACAGCTTTGAAGAGAGCAGTGGTTCTCCCAGCATGCAGCTGGAGATCTGAGA");
			alignmentReaderPtr->addAlignment(894,"AACAAAAAGACAGCAGTAACCTCTGCAGACTTAAGTGTCCCTGTCTGACAGCTTTGAAGAGAGCAGTGGTTCTCCCAGCATGCAGCTGGAGATCTGAGAAC");
			alignmentReaderPtr->addAlignment(896,"CAAAAAGACAGCAGTAACCTCTGCAGACTTAAGTGTCCCTGTCTGACAGCTTTGAAGAGAGCAGTGGTTCTCCCAGCATGCAGCTGGAGATCTGAGAACGG");
			alignmentReaderPtr->addAlignment(897,"AAAAAGACAGCAGTAACCTCTGCAGACTTAAGTGTCCCTGTCTGACAGCTTTGAAGAGAGCAGTGGTTCTCCCAGCATGCAGCTGGAGATCTGAGAACGGG");
			alignmentReaderPtr->addAlignment(903,"ACAGCAGTAACCTCTGCAGACTTAAGTGTCCCTGTCTGACAGCTTTGAAGAGAGCAGTGGTTCTCCCAGCATGCAGCTGGAGATCTGAGAACGGGCAGACT");
			alignmentReaderPtr->addAlignment(911,"AACCTCTGCAGACTTAAGTGTCCCTGTCTGACAGCTTTGAAGAGAGCAGTGGTTCTCCCAGCATGCAGCTGGAGATCTGAGAACGGGCAGACTGCCTCCTC");
			alignmentReaderPtr->addAlignment(912,"ACCTCTGCAGACTTAAGTGTCCCTGTCTGACAGCTTTGAAGAGAGCAGTGGTTCTCCCAGCATGCAGCTGGAGATCTGAGAACGGGCAGACTGCCTCCTCA");
			alignmentReaderPtr->addAlignment(921,"GACTTAAGTGTCCCTGTCTGACAGCTTTGAAGAGAGCAGTGGTTCTCCCAGCATGCAGCTGGAGATCTGAGAACGGGCAGACTGCCTCCTCAAGTGGGTCC");
			alignmentReaderPtr->addAlignment(923,"CTTAAGTGTCCCTGTCTGACAGCTTTGAAGAGAGCAGTGGTTCTCCCAGCATGCAGCTGGAGATCTGAGAACGGGCAGACTGCCTCCTCAAGTGGGTCCCT");
			alignmentReaderPtr->addAlignment(931,"TCCCTGTCTGACAGCTTTGAAGAGAGCAGTGGTTCTCCCAGCATGCAGCTGGAGATCTGAGAACGGGCAGACTGCCTCCTCAAGTGGGTCCCTGACCCCTG");
			alignmentReaderPtr->addAlignment(931,"TCCCTGTCTGACAGCTTTGAAGAGAGCAGTGGTTCTCCCAGCATGCAGCTGGAGATCTGAGAACGGGCAGACTGCCTCCTCAAGTGGGTCCCTGACCCCTG");
			alignmentReaderPtr->addAlignment(942,"CAGCTTTGAAGAGAGCAGTGGTTCTCCCAGCATGCAGCTGGAGATCTGAGAACGGGCAGACTGCCTCCTCAAGTGGGTCCCTGACCCCTGACCCCCGAGCA");
			alignmentReaderPtr->addAlignment(956,"GCAGTGGTTCTCCCAGCATGCAGCTGGAGATCTGAGAACGGGCAGACTGCCTCCTCAAGTGGGTCCCTGACCCCTGACCCCCGAGCAGCCTAACTGGGAGG");
			alignmentReaderPtr->addAlignment(958,"AGTGGTTCTCCCAGCATGCAGCTGGAGATCTGAGAACGGGCAGACTGCCTCCTCAAGTGGGTCCCTGACCCCTGACCCCCGAGCAGCCTAACTGGGAGGCA");
			alignmentReaderPtr->addAlignment(967,"CCCAGCATGCAGCTGGAGATCTGAGAACGGGCAGACTGCCTCCTCAAGTGGGTCCCTGACCCCTGACCCCCGAGCAGCCTAACTGGGAGGCACCCCCCAGC");
			alignmentReaderPtr->addAlignment(969,"CAGCATGCAGCTGGAGATCTGAGAACGGGCAGACTGCCTCCTCAAGTGGGTCCCTGACCCCTGACCCCCGAGCAGCCTAACTGGGAGGCACCCCCCAGCAG");
			alignmentReaderPtr->addAlignment(973,"ATGCAGCTGGAGATCTGAGAACGGGCAGACTGCCTCCTCAAGTGGGTCCCTGACCCCTGACCCCCGAGCAGCCTAACTGGGAGGCACCCCCCAGCAGGGGC");
			alignmentReaderPtr->addAlignment(975,"GCAGCTGGAGATCTGAGAACGGGCAGACTGCCTCCTCAAGTGGGTCCCTGACCCCTGACCCCCGAGCAGCCTAACTGGGAGGCACCCCCCAGCAGGGGCAC");
			alignmentReaderPtr->addAlignment(977,"AGCTGGAGATCTGAGAACGGGCAGACTGCCTCCTCAAGTGGGTCCCTGACCCCTGACCCCCGAGCAGCCTAACTGGGAGGCACCCCCCAGCAGGGGCACAC");
			alignmentReaderPtr->addAlignment(986,"TCTGAGAACGGGCAGACTGCCTCCTCAAGTGGGTCCCTGACCCCTGACCCCCGAGCAGCCTAACTGGGAGGCACCCCCCAGCAGGGGCACACTGACACCTC");
			alignmentReaderPtr->addAlignment(986,"TCTGAGAACGGGCAGACTGCCTCCTCAAGTGGGTCCCTGACCCCTGACCCCCGAGCAGCCTAACTGGGAGGCACCCCCCAGCAGGGGCACACTGACACCTC");
			alignmentReaderPtr->addAlignment(987,"CTGAGAACGGGCAGACTGCCTCCTCAAGTGGGTCCCTGACCCCTGACCCCCGAGCAGCCTAACTGGGAGGCACCCCCCAGCAGGGGCACACTGACACCTCA");
			alignmentReaderPtr->addAlignment(993,"ACGGGCAGACTGCCTCCTCAAGTGGGTCCCTGACCCCTGACCCCCGAGCAGCCTAACTGGGAGGCACCCCCCAGCAGGGGCACACTGACACCTCACACGAC");
			alignmentReaderPtr->addAlignment(994,"CGGGCAGACTGCCTCCTCAAGTGGGTCCCTGACCCCTGACCCCCGAGCAGCCTAACTGGGAGGCACCCCCCAGCAGGGGCACACTGACACCTCACACGACA");
			alignmentReaderPtr->addAlignment(1000,"GACTGCCTCCTCAAGTGGGTCCCTGACCCCTGACCCCCGAGCAGCCTAACTGGGAGGCACCCCCCAGCAGGGGCACACTGACACCTCACACGACAGGGTAT");
			alignmentReaderPtr->addAlignment(1002,"CTGCCTCCTCAAGTGGGTCCCTGACCCCTGACCCCCGAGCAGCCTAACTGGGAGGCACCCCCCAGCAGGGGCACACTGACACCTCACACGACAGGGTATTC");
			alignmentReaderPtr->addAlignment(1003,"TGCCTCCTCAAGTGGGTCCCTGACCCCTGACCCCCGAGCAGCCTAACTGGGAGGCACCCCCCAGCAGGGGCACACTGACACCTCACACGACAGGGTATTCC");
			alignmentReaderPtr->addAlignment(1009,"CTCAAGTGGGTCCCTGACCCCTGACCCCCGAGCAGCCTAACTGGGAGGCACCCCCCAGCAGGGGCACACTGACACCTCACACGACAGGGTATTCCAACAGA");
			alignmentReaderPtr->addAlignment(1010,"TCAAGTGGGTCCCTGACCCCTGACCCCCGAGCAGCCTAACTGGGAGGCACCCCCCAGCAGGGGCACACTGACACCTCACACGACAGGGTATTCCAACAGAC");
			alignmentReaderPtr->addAlignment(1011,"CAAGTGGGTCCCTGACCCCTGACCCCCGAGCAGCCTAACTGGGAGGCACCCCCCAGCAGGGGCACACTGACACCTCACACGACAGGGTATTCCAACAGACC");
			alignmentReaderPtr->addAlignment(1015,"TGGGTCCCTGACCCCTGACCCCCGAGCAGCCTAACTGGGAGGCACCCCCCAGCAGGGGCACACTGACACCTCACACGACAGGGTATTCCAACAGACCTGCA");
			alignmentReaderPtr->addAlignment(1020,"CCCTGACCCCTGACCCCCGAGCAGCCTAACTGGGAGGCACCCCCCAGCAGGGGCACACTGACACCTCACACGACAGGGTATTCCAACAGACCTGCAGCTGA");
			alignmentReaderPtr->addAlignment(1027,"CCCTGACCCCCGAGCAGCCTAACTGGGAGGCACCCCCCAGCAGGGGCACACTGACACCTCACACGACAGGGTATTCCAACAGACCTGCAGCTGAGGGTCCT");
			alignmentReaderPtr->addAlignment(1032,"ACCCCCGAGCAGCCTAACTGGGAGGCACCCCCCAGCAGGGGCACACTGACACCTCACACGACAGGGTATTCCAACAGACCTGCAGCTGAGGGTCCTGTCTG");
			alignmentReaderPtr->addAlignment(1035,"CCCGAGCAGCCTAACTGGGAGGCACCCCCCAGCAGGGGCACACTGACACCTCACACGACAGGGTATTCCAACAGACCTGCAGCTGAGGGTCCTGTCTGTTA");
			alignmentReaderPtr->addAlignment(1038,"GAGCAGCCTAACTGGGAGGCACCCCCCAGCAGGGGCACACTGACACCTCACACGACAGGGTATTCCAACAGACCTGCAGCTGAGGGTCCTGTCTGTTAGAA");
			alignmentReaderPtr->addAlignment(1045,"CTAACTGGGAGGCACCCCCCAGCAGGGGCACACTGACACCTCACACGACAGGGTATTCCAACAGACCTGCAGCTGAGGGTCCTGTCTGTTAGAAGGAAAAC");
			alignmentReaderPtr->addAlignment(1047,"AACTGGGAGGCACCCCCCAGCAGGGGCACACTGACACCTCACACGACAGGGTATTCCAACAGACCTGCAGCTGAGGGTCCTGTCTGTTAGAAGGAAAACTA");
			alignmentReaderPtr->addAlignment(1054,"AGGCACCCCCCAGCAGGGGCACACTGACACCTCACACGACAGGGTATTCCAACAGACCTGCAGCTGAGGGTCCTGTCTGTTAGAAGGAAAACTAACAACCA");
			alignmentReaderPtr->addAlignment(1054,"AGGCACCCCCCAGCAGGGGCACACTGACACCTCACACGACAGGGTATTCCAACAGACCTGCAGCTGAGGGTCCTGTCTGTTAGAAGGAAAACTAACAACCA");
			alignmentReaderPtr->addAlignment(1060,"CCCCCAGCAGGGGCACACTGACACCTCACACGACAGGGTATTCCAACAGACCTGCAGCTGAGGGTCCTGTCTGTTAGAAGGAAAACTAACAACCAGAAAGG");
			alignmentReaderPtr->addAlignment(1061,"CCCCAGCAGGGGCACACTGACACCTCACACGACAGGGTATTCCAACAGACCTGCAGCTGAGGGTCCTGTCTGTTAGAAGGAAAACTAACAACCAGAAAGGA");
			alignmentReaderPtr->addAlignment(1070,"GGGCACACTGACACCTCACACGACAGGGTATTCCAACAGACCTGCAGCTGAGGGTCCTGTCTGTTAGAAGGAAAACTAACAACCAGAAAGGACATCTACAC");
			alignmentReaderPtr->addAlignment(1077,"CTGACACCTCACACGACAGGGTATTCCAACAGACCTGCAGCTGAGGGTCCTGTCTGTTAGAAGGAAAACTAACAACCAGAAAGGACATCTACACCGAAAAC");
			alignmentReaderPtr->addAlignment(1077,"CTGACACCTCACACGACAGGGTATTCCAACAGACCTGCAGCTGAGGGTCCTGTCTGTTAGAAGGAAAACTAACAACCAGAAAGGACATCTACACCGAAAAC");
			alignmentReaderPtr->addAlignment(1086,"CACACGACAGGGTATTCCAACAGACCTGCAGCTGAGGGTCCTGTCTGTTAGAAGGAAAACTAACAACCAGAAAGGACATCTACACCGAAAACCCATCTGTA");
			alignmentReaderPtr->addAlignment(1100,"TTCCAACAGACCTGCAGCTGAGGGTCCTGTCTGTTAGAAGGAAAACTAACAACCAGAAAGGACATCTACACCGAAAACCCATCTGTACATCACCATCATCA");
			alignmentReaderPtr->addAlignment(1112,"TGCAGCTGAGGGTCCTGTCTGTTAGAAGGAAAACTAACAACCAGAAAGGACATCTACACCGAAAACCCATCTGTACATCACCATCATCAAAGACCAAAAGT");
			alignmentReaderPtr->addAlignment(1113,"GCAGCTGAGGGTCCTGTCTGTTAGAAGGAAAACTAACAACCAGAAAGGACATCTACACCGAAAACCCATCTGTACATCACCATCATCAAAGACCAAAAGTA");
			alignmentReaderPtr->addAlignment(1115,"AGCTGAGGGTCCTGTCTGTTAGAAGGAAAACTAACAACCAGAAAGGACATCTACACCGAAAACCCATCTGTACATCACCATCATCAAAGACCAAAAGTAGA");
			alignmentReaderPtr->addAlignment(1115,"AGCTGAGGGTCCTGTCTGTTAGAAGGAAAACTAACAACCAGAAAGGACATCTACACCGAAAACCCATCTGTACATCACCATCATCAAAGACCAAAAGTAGA");
			alignmentReaderPtr->addAlignment(1116,"GCTGAGGGTCCTGTCTGTTAGAAGGAAAACTAACAACCAGAAAGGACATCTACACCGAAAACCCATCTGTACATCACCATCATCAAAGACCAAAAGTAGAT");
			alignmentReaderPtr->addAlignment(1121,"GGGTCCTGTCTGTTAGAAGGAAAACTAACAACCAGAAAGGACATCTACACCGAAAACCCATCTGTACATCACCATCATCAAAGACCAAAAGTAGATAAAAC");
			alignmentReaderPtr->addAlignment(1135,"AGAAGGAAAACTAACAACCAGAAAGGACATCTACACCGAAAACCCATCTGTACATCACCATCATCAAAGACCAAAAGTAGATAAAACCACAAAGATGGGGA");
			alignmentReaderPtr->addAlignment(1136,"GAAGGAAAACTAACAACCAGAAAGGACATCTACACCGAAAACCCATCTGTACATCACCATCATCAAAGACCAAAAGTAGATAAAACCACAAAGATGGGGAA");
			alignmentReaderPtr->addAlignment(1137,"AAGGAAAACTAACAACCAGAAAGGACATCTACACCGAAAACCCATCTGTACATCACCATCATCAAAGACCAAAAGTAGATAAAACCACAAAGATGGGGAAA");
			alignmentReaderPtr->addAlignment(1142,"AAACTAACAACCAGAAAGGACATCTACACCGAAAACCCATCTGTACATCACCATCATCAAAGACCAAAAGTAGATAAAACCACAAAGATGGGGAAAAAACA");
			alignmentReaderPtr->addAlignment(1146,"TAACAACCAGAAAGGACATCTACACCGAAAACCCATCTGTACATCACCATCATCAAAGACCAAAAGTAGATAAAACCACAAAGATGGGGAAAAAACAGAAC");
			alignmentReaderPtr->addAlignment(1152,"CCAGAAAGGACATCTACACCGAAAACCCATCTGTACATCACCATCATCAAAGACCAAAAGTAGATAAAACCACAAAGATGGGGAAAAAACAGAACAGAAAA");
			alignmentReaderPtr->addAlignment(1152,"CCAGAAAGGACATCTACACCGAAAACCCATCTGTACATCACCATCATCAAAGACCAAAAGTAGATAAAACCACAAAGATGGGGAAAAAACAGAACAGAAAA");
			alignmentReaderPtr->addAlignment(1180,"ATCTGTACATCACCATCATCAAAGACCAAAAGTAGATAAAACCACAAAGATGGGGAAAAAACAGAACAGAAAAACTGGAAACCCTAAAACGCAGAGCGCCT");
			alignmentReaderPtr->addAlignment(1180,"ATCTGTACATCACCATCATCAAAGACCAAAAGTAGATAAAACCACAAAGATGGGGAAAAAACAGAACAGAAAAACTGGAAACCCTAAAACGCAGAGCGCCT");
			alignmentReaderPtr->addAlignment(1183,"TGTACATCACCATCATCAAAGACCAAAAGTAGATAAAACCACAAAGATGGGGAAAAAACAGAACAGAAAAACTGGAAACCCTAAAACGCAGAGCGCCTCTC");
			alignmentReaderPtr->addAlignment(1187,"CATCACCATCATCAAAGACCAAAAGTAGATAAAACCACAAAGATGGGGAAAAAACAGAACAGAAAAACTGGAAACCCTAAAACGCAGAGCGCCTCTCCTCC");
			alignmentReaderPtr->addAlignment(1190,"CACCATCATCAAAGACCAAAAGTAGATAAAACCACAAAGATGGGGAAAAAACAGAACAGAAAAACTGGAAACCCTAAAACGCAGAGCGCCTCTCCTCCTCC");
			alignmentReaderPtr->addAlignment(1193,"CATCATCAAAGACCAAAAGTAGATAAAACCACAAAGATGGGGAAAAAACAGAACAGAAAAACTGGAAACCCTAAAACGCAGAGCGCCTCTCCTCCTCCAAA");
			alignmentReaderPtr->addAlignment(1201,"AAGACCAAAAGTAGATAAAACCACAAAGATGGGGAAAAAACAGAACAGAAAAACTGGAAACCCTAAAACGCAGAGCGCCTCTCCTCCTCCAAAGGAACGCA");
			alignmentReaderPtr->addAlignment(1204,"ACCAAAAGTAGATAAAACCACAAAGATGGGGAAAAAACAGAACAGAAAAACTGGAAACCCTAAAACGCAGAGCGCCTCTCCTCCTCCAAAGGAACGCAGTT");
			alignmentReaderPtr->addAlignment(1215,"ATAAAACCACAAAGATGGGGAAAAAACAGAACAGAAAAACTGGAAACCCTAAAACGCAGAGCGCCTCTCCTCCTCCAAAGGAACGCAGTTCCTCACCAGCA");
			alignmentReaderPtr->addAlignment(1220,"ACCACAAAGATGGGGAAAAAACAGAACAGAAAAACTGGAAACCCTAAAACGCAGAGCGCCTCTCCTCCTCCAAAGGAACGCAGTTCCTCACCAGCAACAGA");

			referencePtr = testReferenceVariantGenerator.getReference();
			variantListPtr = testReferenceVariantGenerator.getVariants();
			alignmentReaderPtr->setRegion(referencePtr->getRegion());

			/*
			std::cout << "start position: " << referencePtr->getRegion()->getStartPosition() << std::endl;
			std::cout << "end position: " << referencePtr->getRegion()->getEndPosition() << std::endl;
			std::cout << "ref len: " << referencePtr->getRegion()->getEndPosition() - referencePtr->getRegion()->getStartPosition() << std::endl;
			std::cout << "length: " << referenceString.size() << std::endl;
			*/

		}
	};

	TEST(GSSWTests, TestAlignmentReport)
	{
		gwiz::IReference::SharedPtr referencePtr;
		gwiz::IVariantList::SharedPtr variantListPtr;
		gwiz::testing::TestAlignmentReader::SharedPtr alignmentReaderPtr;
		GSSWGraphTest::Build31VariantsTestData(referencePtr, variantListPtr, alignmentReaderPtr);

		auto gsswGraph = std::make_shared< gwiz::gssw::GSSWGraph >(referencePtr, variantListPtr, alignmentReaderPtr);
		gsswGraph->constructGraph();

		gwiz::gssw::AlignmentReporter::Instance()->printAlignmentReportsToStream(std::cout);
		// auto graphManagerPtr = std::make_shared< gwiz::gssw::GraphManager >(referencePtr, variantListPtr, alignmentReaderPtr, 25);
		// graphManagerPtr->buildGraphs();
		// auto gsswGraph = std::make_shared< GSSWGraphTest >(referencePtr, variantListPtr, alignmentReaderPtr);
		// gsswGraph->constructGraph();
	}
/*
	TEST(GSSWTests, TestConstructChr20)
	{
		// boost::function< void, (int) > funct [](int x) { std::cout << "pool: " << x << std::endl; };
		/*
		std::function<void (int*)> f2 = [](int* x){ *x += 1; std::this_thread::sleep_for(std::chrono::seconds(1)); };

		int count = 0;
		int count2 = 0;
		for (int i = 0; i < 100; ++i)
		{
			++count2;
			gwiz::ThreadPool::Instance()->postJob(boost::bind(f2, &count));
		}
		std::this_thread::sleep_for(std::chrono::seconds(60));
		// gwiz::ThreadPool::Instance()->joinAll();
		std::cout << "Count: " << count << std::endl;
		std::cout << "Count2: " << count2 << std::endl;

		if (true) { return; }
		*/
		// IReference::SharedPtr referencePtr, IVariantList::SharedPtr variantListPtr, IAlignmentReaderManager::SharedPtr alignmentReaderManager, size_t padding) :

/*
		std::string fastaPath = TEST_FASTA_FILE;
		std::string vcfPath = TEST_1KG_CHR20_VCF_FILE;
		std::string bamPath = TEST_BAM_FILE;
		std::ofstream ofs ("test.txt",std::ofstream::out);
		ofs << "hello";
		// bamPath = "/d1/data/project_bam/platinum_genomes/NA12878_2_sorted_Dedup_realign_recal.bam";
/*
		gwiz::Region::SharedPtr regionPtr = std::make_shared< gwiz::Region >("20");
		auto fastaReferencePtr = std::make_shared< gwiz::FastaReference >(fastaPath, regionPtr);
		auto vcfFileReaderPtr = std::make_shared<gwiz::VCFFileReader>(vcfPath);
		// auto bamAlignmentReaderManager = std::make_shared< gwiz::BamAlignmentReaderManager >(bamPath);
		// auto graphManagerPtr = std::make_shared< gwiz::gssw::GraphManager >(fastaReferencePtr, vcfFileReaderPtr, bamAlignmentReaderManager, 25);
		auto bamAlignmentReaderPreloadManager = std::make_shared< gwiz::BamAlignmentReaderPreloadManager >(bamPath, regionPtr);
		auto graphManagerPtr = std::make_shared< gwiz::gssw::GraphManager >(fastaReferencePtr, vcfFileReaderPtr, bamAlignmentReaderPreloadManager, 25);
		graphManagerPtr->buildGraphs();
		gwiz::gssw::AlignmentReporter::Instance()->printAlignmentReportsToStream(ofs);

		ofs.close();
		std::cout << "We are here" << std::endl;
	}

	TEST(GSSWTests, TestConstructTestData)
	{
		/*
		gwiz::IReference::SharedPtr referencePtr;
		gwiz::IVariantList::SharedPtr variantListPtr;
		gwiz::testing::TestAlignmentReader::SharedPtr alignmentReaderPtr;

		GSSWGraphTest::Build31VariantsTestData(referencePtr, variantListPtr, alignmentReaderPtr);
		auto gsswGraph = std::make_shared< GSSWGraphTest >(referencePtr, variantListPtr, alignmentReaderPtr);
		gsswGraph->constructGraph();
		*/

/*
		std::cout << "contigs constructed" << std::endl;

		auto contigs = variantGraph->getContigs();
		size_t contigCount = 0;
		while (!contigs.empty())
		{
			auto contig = contigs.front();
			contigCount += contig->getContigs().size();
			contigs.pop();
		}
		std::cout << "Contig Count: " << contigCount << std::endl;
*/

		// variantGraph->printGraph("test1.dot");


		// gwiz::testing::TestReferenceVariantGenerator testReferenceVariantGenerator(m_reference_string, "20", 6000);
		// testReferenceVariantGenerator.addVariant(6010, ".", {"A","C"});
		// auto variantGraph = std::make_shared< gwiz::vg::VariantGraph >(testReferenceVariantGenerator.getReference(), testReferenceVariantGenerator.getVariants());

	}

#endif //GWIZ_GSSW_GSSWGRAPH_TESTS_HPP
